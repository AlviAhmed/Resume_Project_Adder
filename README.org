#+TITLE: Resume Project Adder
#+AUTHOR: Alvi Ahmed
*Status:* In Development
*Type:* Personal


* Objective

To create a script that allows me to build a resume that caters to
companies wanted skills more quickly. 

When I input some skills that companies are looking for, the script
looks through a list of projects that I have already done that have the same
skills and adds it into a new resume template. 

Thus creating a specific resume taylored to the needs of the position.

* Logs  


** Log4.5 

*In progress*

*** Progress 

- While testing  the script noticed a couple bugs with receiving
  projects 
  - *BUG* When searching for skill in *project_list.tex* instead of
    restricting the search to just the Skills Used line, it also
    extracts projects with skills mentioned in the description,
    causing unintended projects to be selected. This is apparent when
    typing in the skill "Control".
    - This is probably due to the fact that since I am specifying a
      paragraph to be selected, awk automatically searches throughout
      the whole project paragraph instead of just the Skills Used
      line. When not specifying paragraphs with newlines, awk is able
      to select the skill line that has the skill the user is looking for
    - *Solution* After doing more research into awk I realized that I
      can just change how fields are percieved. Therefore, I made the
      field variable equal to newline and since all skill lines are
      second to last, I made a variable storing the second to last
      field of each record (in this case being the paragraph) and
      searched for userinput skill. Therefore guranteeing that no
      unintended projects are added. The debugging and testing code is
      in *extractor.awk* 

***  Next Steps 

- Need to go back fix nameFunc and ensure that there are no repeated
  projects that are entered into the buffer.

** Log4  

*** Progress  

- Temporarily hard coded company, name and position name for testing
  and debugging purposes

- The *mainCondFunc* function deals with if the user input is
  blank. This is the *User Input Verification Stage*. Once passed, the
  script goes on to the next stage which is the *Skill Verification Stage*.

- With the *validateSkillFunc*, this solves the problem of verifying
  the users input as a skill within a project instead of just another
  word in the document. If the user input is a valid skill mentioned
  in *Skills Used*, then the script goes on to the *repeatCheckerFunc*
  function which checks whether or not skill has been repeated /
  previously entered before. If passed the next stage starts which is
  the *Project Verification Stage*.  

- At this stage, the function *nameFunc* is used makes sure that
  projects that are being inputted into the
  resume file don't share the same name with a project that is already
  in the resume file. 


*** Next Steps 

- Need to fix bug with *nameFunc*,
  since if there is a project in placeholder that is in resume, but
  there also exists another project that is not in resume then the
  function will throw out both projects even though there is 1 not
  repeated.
- Need to do more quality assurance by testing different user inputs
  and dealing with the possible bugs



** Log3.5 

*** Progess 

- Had to do some tests since I was still getting duplicate projects
- In *tester.sh* was able to get userinput and compare it to the
  Skills Used in each extracted project   

*** Next Steps 

- Implement functions in *tester.sh* in script

** Log3 

*** Progress 

- Script takes in company name and position as input, name already in
  script for now
- Script now makes a generic directory (or checks if it already
  exists) to store the different resumes that it creates, file and
  directory names are based on inputted position and company name

*** Next Steps 
- *TODO*: Fix bug were projects may be repeated in resume if the
  project contains multiple skills that the user is inputting.
  - For example, if a project has skills listed as C++ and Embedded
    Systems, the project will be inserted into the resume twice if the
    user inputs C++ and Embedded as skills.
  - Fixing this bug will tie into another aspect of the script that I
    am trying to finish which is listing the skills at  the bottom of
    the resume. 





** Log2 

*** Progress 

- Arbitrary priorities are given to projects and script now able to
  seperate priorities into seperate buffers, from there buffers that
  contain higher priority projects are put into the resume first, then
  lower priority ones.  

*NOTE:* Function is present to clean the resume and remove lines with
"Pr", however still need to keep those lines for debugging purposes

*NOTE:* Being able to control page limit will be put on hold for
  now, need to work on other functions before I focus on that. For now
  will manually edit resume to 1 page if needed

*** Next Steps 
- ask for position and company and after user inputs skills creates a
  new directory with the modified resume file

** Log 1 

*** Progress
- Using awk I was able to select entire snippet from a tex file  
describing the project from a skill pattern match. 

- These snippets are then inputted in a buffer.tex and then a sed
  command inserts them in the proper position in the resume template

- Reason for buffer is so that I can process snippets further for more
  information, i.e. difficulty / complexity level, relevance / date
  and etc. 

- Have code in place for creating and deleting tmp files but still
  using buffer.tex for debugging 

*** Next Steps 

- Implementing constraints 
  - resume must be 1 page
  - more advanced and newer projects should have priority over
    simplier or older ones in a certain skill set
- Need to include some type of tag in the project list that accounts
  for complexity and relevance  
- Need to find out how to ensure everything stays on 1 page
- At the end of the script should compile to PDF

